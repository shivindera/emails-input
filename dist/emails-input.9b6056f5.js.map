{"version":3,"sources":["src/emails-input.ts"],"names":[],"mappings":";AAAA,IAAA,EAAA,WAWI,SAAA,EAAY,GAAE,IAAA,EAAQ,EAAA,SAAE,EAAM,EAAA,OAAE,EAAQ,EAAA,SAC/B,GAIC,OAAQ,OAAO,KAAM,CAAE,SAAQ,EAAE,OAAM,EAAE,SAAQ,IAClD,KAAA,UAAY,GACZ,KAAA,aACA,KAAA,gBAND,QAAQ,MAAM,uDAqH1B,OA5GI,EAAA,UAAA,WAAA,WACS,KAAA,SAAS,UAAU,IAAI,0BACtB,IAAA,EAAe,SAAS,cAAc,OAC5C,EAAa,UAAY,oBACpB,KAAA,aAAe,EACd,IAAA,EAAQ,SAAS,cAAc,SACrC,EAAM,KAAO,QACb,EAAM,UAAY,eAClB,EAAM,YAAc,mBACf,KAAA,WAAa,EACb,KAAA,aAAa,YAAY,GACzB,KAAA,SAAS,YAAY,IAG9B,EAAA,UAAA,aAAA,WAAA,IAAA,EAAA,KACS,KAAA,SAAS,iBAAiB,QAAS,SAAC,GAC/B,IAAA,EAAS,EAAE,OACX,EAAa,EAAE,cACjB,EAAO,WAAW,IAClB,EAAK,WAAW,UAGnB,KAAA,aAAa,iBAAiB,QAAS,SAAC,GACnC,IAAA,EAAS,EAAE,OACX,EAAa,EAAE,cACjB,GAAA,EAAO,QAAQ,iBAAkB,CAC3B,IAAA,EAAU,EAAO,cACvB,EAAK,YAAY,GAEjB,EAAO,WAAW,IAClB,EAAK,WAAW,UAGnB,KAAA,WAAW,iBAAiB,QAAS,SAAC,GACjC,IAAA,EAAM,EAAK,WAAW,MACV,KAAd,EAAE,SAAgC,KAAd,EAAE,SAAgC,MAAd,EAAE,UAC1C,EAAK,SAAS,GACd,EAAK,WAAW,MAAQ,MAG3B,KAAA,WAAW,iBAAiB,QAAS,SAAC,GACvC,EAAE,iBACI,IAAA,EAAM,EAAE,cAAc,QAAQ,cAChC,IACA,EAAI,MAAM,UAAU,QAAQ,SAAC,GACzB,EAAK,SAAS,KAElB,EAAK,WAAW,MAAQ,MAG3B,KAAA,WAAW,iBAAiB,OAAQ,WAC/B,IAAA,EAAM,EAAK,WAAW,MACxB,IACA,EAAK,SAAS,GACd,EAAK,WAAW,MAAQ,MAG5B,KAAK,QACA,KAAA,OAAO,iBAAiB,QAAS,WAC5B,IAAA,EAAQ,EAAK,cACnB,EAAK,SAAS,KAGlB,KAAK,UACA,KAAA,SAAS,iBAAiB,QAAS,WAC9B,IAAA,EAAQ,EAAK,UAAU,OAAO,SAAC,EAAK,GAAc,OAAA,EAAS,MAAQ,EAAM,EAAI,GAAM,GACzF,OAAO,MAAS,EAAK,sBAKjC,EAAA,UAAA,SAAA,SAAS,GACC,IAAA,EAAQ,EAAI,QAAQ,IAAK,IACzB,EAAU,KAAK,cAAc,GAC7B,EAAU,SAAS,cAAc,OACvC,EAAQ,UAAY,YAAW,EAAU,eAAiB,IAC1D,EAAQ,UAAY,EACd,IAAA,EAAgB,SAAS,cAAc,QAC7C,EAAc,UAAY,eAC1B,EAAc,UAAY,UAC1B,EAAQ,YAAY,GACf,KAAA,aAAa,aAAa,EAAS,KAAK,YACxC,KAAA,UAAU,KAAK,CAChB,GAAI,EACJ,MAAO,KAIf,EAAA,UAAA,YAAA,SAAY,GACH,KAAA,UAAY,KAAK,UAAU,OAAO,SAAC,GAAa,OAAC,EAAS,GAAG,WAAW,KAC7E,EAAQ,UAGZ,EAAA,UAAA,YAAA,WAKS,IAJD,IAAA,EAAO,GAEL,EADa,6BACI,OACjB,EAAU,KAAK,MAAsB,GAAhB,KAAK,UACvB,EAAI,EAAG,EAAI,EAAS,IACzB,GAJe,6BAII,OAAO,KAAK,MAAM,KAAK,SAAW,IAElD,OAAA,EAAU,EAAI,aAAe,KAAK,eAG7C,EAAA,UAAA,cAAA,SAAc,GAEH,MADK,yJACD,KAAK,IAExB,EAlIA,GAoIM,OAAQ,YAAc","file":"emails-input.9b6056f5.js","sourceRoot":"..","sourcesContent":["class EmailsInput {\n    inputBox: HTMLElement;\n    inputBoxFlex: HTMLElement;\n    addBtn?: HTMLElement;\n    countBtn?: HTMLElement;\n    emailInput: HTMLInputElement;\n    emailsArr: Array<{\n        el: HTMLElement;\n        valid: Boolean;\n    }>;\n\n    constructor({ inputBox, addBtn, countBtn }: { inputBox: HTMLElement; addBtn: HTMLElement; countBtn: HTMLElement }) {\n        if (!inputBox) {\n            console.error('No element passed to EmailsInput for initialization');\n            return;\n        }\n        (<any>Object).assign(this, { inputBox, addBtn, countBtn });\n        this.emailsArr = [];\n        this.initialize();\n        this.addListeners();\n    }\n\n    initialize() {\n        this.inputBox.classList.add('emails-input-container');\n        const inputBoxFlex = document.createElement('div');\n        inputBoxFlex.className = 'emails-input-flex';\n        this.inputBoxFlex = inputBoxFlex;\n        const input = document.createElement('input');\n        input.type = 'email';\n        input.className = 'emails-input';\n        input.placeholder = 'add more peopleâ€¦';\n        this.emailInput = input;\n        this.inputBoxFlex.appendChild(input);\n        this.inputBox.appendChild(inputBoxFlex);\n    }\n\n    addListeners() {\n        this.inputBox.addEventListener('click', (e) => {\n            const target = e.target as HTMLElement;\n            const currTarget = e.currentTarget as HTMLElement;\n            if (target.isSameNode(currTarget)) {\n                this.emailInput.focus();\n            }\n        });\n        this.inputBoxFlex.addEventListener('click', (e) => {\n            const target = e.target as HTMLElement;\n            const currTarget = e.currentTarget as HTMLElement;\n            if (target.matches('.email-remove')) {\n                const emailEl = target.parentElement;\n                this.removeEmail(emailEl);\n            }\n            if (target.isSameNode(currTarget)) {\n                this.emailInput.focus();\n            }\n        });\n        this.emailInput.addEventListener('keyup', (e) => {\n            const val = this.emailInput.value;\n            if (e.keyCode === 13 || e.keyCode === 32 || e.keyCode === 188) {\n                this.addEmail(val);\n                this.emailInput.value = '';\n            }\n        });\n        this.emailInput.addEventListener('paste', (e) => {\n            e.preventDefault();\n            const val = e.clipboardData.getData('text/plain');\n            if (val) {\n                val.split(/[\\s,]+/).forEach((email) => {\n                    this.addEmail(email);\n                });\n                this.emailInput.value = '';\n            }\n        });\n        this.emailInput.addEventListener('blur', () => {\n            const val = this.emailInput.value;\n            if (val) {\n                this.addEmail(val);\n                this.emailInput.value = '';\n            }\n        });\n        if (this.addBtn) {\n            this.addBtn.addEventListener('click', () => {\n                const email = this.randomEmail();\n                this.addEmail(email);\n            });\n        }\n        if (this.countBtn) {\n            this.countBtn.addEventListener('click', () => {\n                const count = this.emailsArr.reduce((acc, emailObj) => (emailObj.valid ? acc + 1 : acc), 0);\n                window.alert(`${count} valid email(s)`);\n            });\n        }\n    }\n\n    addEmail(str: string) {\n        const email = str.replace(',', '');\n        const isValid = this.validateEmail(email);\n        const emailEl = document.createElement('div');\n        emailEl.className = `email-el${isValid ? ' email-valid' : ''}`;\n        emailEl.innerText = email;\n        const emailElRemove = document.createElement('span');\n        emailElRemove.className = 'email-remove';\n        emailElRemove.innerHTML = '&times;';\n        emailEl.appendChild(emailElRemove);\n        this.inputBoxFlex.insertBefore(emailEl, this.emailInput);\n        this.emailsArr.push({\n            el: emailEl,\n            valid: isValid,\n        });\n    }\n\n    removeEmail(emailEl: HTMLElement) {\n        this.emailsArr = this.emailsArr.filter((emailObj) => !emailObj.el.isSameNode(emailEl));\n        emailEl.remove();\n    }\n\n    randomEmail() {\n        let user = '';\n        const characters = 'abcdefghijklmnopqrstuvwxyz';\n        const len = characters.length;\n        const userLen = Math.floor(Math.random() * 10);\n        for (let i = 0; i < userLen; i++) {\n            user += characters.charAt(Math.floor(Math.random() * len));\n        }\n        return user ? `${user}@gmail.com` : this.randomEmail();\n    }\n\n    validateEmail(email) {\n        const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return reg.test(email);\n    }\n}\n\n(<any>window).EmailsInput = EmailsInput;\n"]}